name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

env:
  # Sets the Docker registry
  DOCKER_REGISTRY: docker.io
  # Sets the GitHub registry
  GITHUB_REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.0.2
        with:
          cosign-release: 'v1.11.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      # Login against the Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.DOCKER_REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      
      # Login against the GitHub registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.GITHUB_REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (Docker Registry)
        id: meta_docker
        uses: docker/metadata-action@v4.4.0
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (GitHub Registry)
        id: meta_github
        uses: docker/metadata-action@v4.4.0
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image (Docker registry)
        id: build-and-push_docker
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: minionguyjpro/winuefi
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: latest
          pushImage: false
        if:  ${{ github.event_name != 'release' }}
          
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image on release (Docker registry)
        id: build-and-push_docker_release
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: minionguyjpro/winuefi
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: latest
          pushImage: true
        if: ${{ github.event_name == 'release' }}
          
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image (GitHub registry)
        id: build-and-push
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: winuefi
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          tags: main
          pushImage: false
        if: ${{ github.event_name != 'release' }}
      
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image on release (GitHub registry)
        id: build-and-push_release
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: winuefi
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          tags: main
          pushImage: true
        if: ${{ github.event_name == 'release' }}
  test:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Run Docker image
        run: docker run minionguyjpro/winuefi && exit 0
