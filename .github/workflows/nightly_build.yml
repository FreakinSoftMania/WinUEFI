# This is a basic workflow to help you get started with Actions

name: Build nightly EXE application, installer and disk image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Sets environent variables for the complete workflow
env:
  REPO_PATH: 'D:\a\WinUEFI\WinUEFI'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_exe:
    name: Build EXE
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Temporary copies files from source folder to build folder to easily build it into an artifact
      - name: Temporary copy source files
        run: copy "%REPO_PATH%\src\*" "%REPO_PATH%\build\*"
        shell: cmd

      # Converts the batch file into an executable program for Windows
      - name: Build BAT to EXE application
        run: |
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI-console.bat" /exe "%REPO_PATH%\build\WinUEFI_nightly-console.exe" /x64 /icon "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI nightly 64-bit"
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI.bat" /exe "%REPO_PATH%\build\WinUEFI_nightly.exe" /x64 /invisible /icon "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI nightly 64-bit"
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI-console.bat" /exe "%REPO_PATH%\build\WinUEFI_nightly-x86-console.exe" /icon "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI nightly 32-bit"
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI.bat" /exe "%REPO_PATH%\build\WinUEFI_nightly-x86.exe" /icon /invisible "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI nightly 32-bit"
        shell: cmd

      - uses: actions/upload-artifact@v3
        with:
         name: WinUEFI
         path: |
           build/*.exe
           build/*.iso
           build/*.bat
           build/*.ps1
 
  build_installer:
    name: Build installer
    needs: build_exe
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
   
      - uses: actions/download-artifact@v3
        with:
          name: WinUEFI
          path: build/
      - name: Build the EXE installer
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "${{ github.WORKSPACE }}\src\WinUEFI_nightly-setup.iss"
        shell: cmd

      - uses: actions/upload-artifact@v3
        with:
         name: WinUEFI
         path: "build/WinUEFI_nightly-setup.exe"
  build_disk_images:
    name: Build disk images (.ISO and .IMG)
    needs: [build_exe, build_installer]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/download-artifact@v3
        with:
          name: WinUEFI
          path: build/
    
      - name: Copy setup
        run: copy "%REPO_PATH%\build\WinUEFI_nightly-setup.exe" "%REPO_PATH%\src\ISO\autorun.exe"
        shell: cmd
        
      - name: Create .ISO disk image
        uses: Minionguyjpro/Create-Disk-Image-Action@v2
        with:
          path: src\ISO_nightly\
          filename: WinUEFI_nightly-setup.iso
          output-dir: build
          label: WinUEFI Nightly Setup
          push: false
          
      - name: Create .IMG disk image
        uses: Minionguyjpro/Create-Disk-Image-Action@v3
        with:
          path: src\ISO_nightly\
          filename: WinUEFI_nightly-setup.img
          output-dir: build
          label: WinUEFI Nightly Setup
          push: false

      - uses: actions/upload-artifact@v3
        with:
         name: WinUEFI
         path: |
           build/*.iso
           build/*.img
           build/*.mds
           build/*.dvd
