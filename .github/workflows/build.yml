# The workflow for building the stable (regular) version of WinUEFI

name: Build EXE application, installer and disk image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
env:
  REPO_PATH: 'D:\a\WinUEFI\WinUEFI'

jobs:
  build_exe:
    name: Build EXE
    runs-on: windows-latest
    steps:
    
      - uses: actions/checkout@v3
      
      - name: Temporary copy source files
        run: copy "%REPO_PATH%\src\*" "%REPO_PATH%\build\*"
        shell: cmd

      - name: Build BAT to EXE application
        run: |
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI-console.bat" /exe "%REPO_PATH%\build\WinUEFI-console.exe" /x64 /icon "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI 64-bit"
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI.bat" /exe "%REPO_PATH%\build\WinUEFI.exe" /x64 /invisible /icon "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI 64-bit"
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI-console.bat" /exe "%REPO_PATH%\build\WinUEFI-x86-console.exe" /icon "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI 32-bit"
          "%REPO_PATH%\bin\bat_to_exe\bat_to_exe.exe" /bat "%REPO_PATH%\src\WinUEFI.bat" /exe "%REPO_PATH%\build\WinUEFI-x86.exe" /icon /invisible "%REPO_PATH%\src\logo.ico" /uac-admin /productversion "${{ env.RELEASE_VERSION }}" /internalname "WinUEFI 32-bit"
        shell: cmd
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: WinUEFI
          path: |
            build/*.exe
            build/*.iso
            build/*.bat
            build/*.ps1
            build/*.py
            build/*.txt
 
  build_installer:
    name: Build installer
    needs: build_exe
    runs-on: windows-latest
    steps:
    
      - uses: actions/checkout@v3
   
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: WinUEFI
          path: build/
          
      - name: Build the EXE installer
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "${{ github.WORKSPACE }}\src\WinUEFI-setup.iss"
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: WinUEFI
          path: "build/WinUEFI-setup.exe"
          
  build_disk_images:
    name: Build disk images (.ISO and .IMG)
    needs: [build_exe, build_installer]
    runs-on: windows-latest
    steps:
    
      - uses: actions/checkout@v3
      
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: WinUEFI
          path: build/
    
      - name: Copy setup
        run: copy "%REPO_PATH%\build\WinUEFI-setup.exe" "%REPO_PATH%\src\ISO\autorun.exe"
        shell: cmd
        
      - name: Create .ISO disk image
        run: '"%REPO_PATH%\bin\ImgBurn\ImgBurn.exe" /MODE BUILD /BUILDINPUTMODE STANDARD /BUILDOUTPUTMODE IMAGEFILE /SRC "%REPO_PATH%\src\ISO\" /DEST "%REPO_PATH%\build\WinUEFI-setup.iso" /FILESYSTEM "ISO9660 + Joliet" /VOLUMELABEL_ISO9660 "WinUEFI Setup" /VOLUMELABEL_JOLIET "WinUEFI-Setup" /OVERWRITE YES /ROOTFOLDER YES /START /CLOSE /NOIMAGEDETAILS'
        shell: cmd
          
      - name: Create .IMG disk image
        run: '"%REPO_PATH%\bin\ImgBurn\ImgBurn.exe" /MODE BUILD /BUILDINPUTMODE STANDARD /BUILDOUTPUTMODE IMAGEFILE /SRC "%REPO_PATH%\src\ISO\" /DEST "%REPO_PATH%\build\WinUEFI-setup.img" /FILESYSTEM "ISO9660 + Joliet" /VOLUMELABEL_ISO9660 "WinUEFI Setup" /VOLUMELABEL_JOLIET "WinUEFI-Setup" /OVERWRITE YES /ROOTFOLDER YES /START /CLOSE /NOIMAGEDETAILS'
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: WinUEFI
          path: |
            build/*.iso
            build/*.img
            build/*.mds
            build/*.dvd
            
  get_file_checksums:
    name: Get file checksums
    needs: [build_exe, build_installer, build_disk_images]
    runs-on: windows-latest
    steps:
    
      - uses: actions/checkout@v3
      
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: WinUEFI
          path: build/
      
      - name: Generate checksums
        uses: jmgilman/actions-generate-checksum@v1
        with:
          output: build/checksums.txt
          patterns: |
            build/*.exe
            build/*.iso
            build/*.bat
            build/*.ps1
            build/*.py
            build/*.iso
            build/*.img
            build/*.mds
            build/*.dvd
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: WinUEFI
          path: "build/checksums.txt"
